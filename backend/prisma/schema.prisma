generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @unique @default(autoincrement())
  email    String        @unique
  password String
  name     String
  address  UserAddress[]
  birthday String
  Order    Order[]
}

model UserAddress {
  id       Int     @id @default(autoincrement())
  location String  @unique
  cep      String
  userId   Int
  User     User    @relation(fields: [userId], references: [id])
  Order    Order[]
}

model Product {
  id          Int              @id @unique @default(autoincrement())
  name        String
  description String
  variants    ProductVariant[]
}

model ProductVariant {
  price        Float
  color        String
  size         String
  quantity     Int
  product      Product        @relation(fields: [productId], references: [id])
  productId    Int
  OrderProduct OrderProduct[]

  @@unique([color, size, productId])
}

enum ShipmentType {
  Standard
  Express
  NextDay
}

enum OrderStatus {
  Pending
  Processing
  Shipped
  Delivered
  Canceled
  Refunded
}

model Order {
  id              Int            @id @unique @default(autoincrement())
  discount        Float
  shipping        Float
  subtotal        Float
  total           Float
  user            User           @relation(fields: [userId], references: [id])
  userId          Int
  address         UserAddress    @relation(fields: [addressLocation], references: [location])
  addressLocation String
  OrderProduct    OrderProduct[]
  shipmentType    ShipmentType
  orderStatus     OrderStatus
  Payment         Payment[]
}

model OrderProduct {
  order          Order          @relation(fields: [orderId], references: [id])
  productVariant ProductVariant @relation(fields: [color, size, productId], references: [color, size, productId])
  name           String
  price          Float
  color          String
  size           String
  quantity       Int
  orderId        Int
  productId      Int
  payment        Payment?       @relation(fields: [paymentId], references: [id])
  paymentId      Int?

  @@id([orderId, color, size, productId])
}

enum PaymentType {
  Pix
  CreditCard
}

enum PaymentStatus {
  Pending
  Confirmed
  Cancelled
}

model Payment {
  id            Int            @id @unique @default(autoincrement())
  type          PaymentType
  status        PaymentStatus  @default(Pending)
  transactionId String
  Order         Order          @relation(fields: [orderId], references: [id])
  orderId       Int
  OrderProduct  OrderProduct[]
}
