generator client {
   provider      = "prisma-client-js"
   binaryTargets = ["native", "linux-musl"]
}

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

model User {
  id       Int   @id @unique @default(autoincrement())
  email    String @unique
  password String
  name     String
  address  UserAddress[]
  birthday String
  Order    Order[]
}

model UserAddress {
  id       Int @id @default(autoincrement())
  location String @unique
  userId   Int
  User     User  @relation(fields: [userId], references: [id])
  Order    Order[]
}

model Product {
  id       Int   @id @unique @default(autoincrement())
  name     String
  price    Decimal
  description String
  variants ProductVariant[]
}

model ProductVariant {
  color    String
  size     String
  quantity Int
  product  Product @relation(fields: [productId], references: [id])
  productId Int
  OrderProduct OrderProduct[]

   @@unique([color, size, productId])
}

model ShipmentType {
  id       Int @id @default(autoincrement())
  type     String @unique
  Order    Order[]
}

model OrderStatus {
  status   String @id
  Order    Order[]
}

model Order {
  id       Int   @id @unique @default(autoincrement())
  discount Decimal
  total    Decimal
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  address  UserAddress @relation(fields: [addressId], references: [id])
  addressId  Int
  OrderProduct OrderProduct[]
  shipmentType ShipmentType  @relation(fields: [shipmentTypeId], references: [id])
  shipmentTypeId Int
  orderStatus OrderStatus @relation(fields: [orderStatusId], references: [status])
  orderStatusId String
}

model OrderProduct {
  order    Order   @relation(fields: [orderId], references: [id])
  productVariant  ProductVariant @relation(fields: [color, size, productId], references: [color, size, productId])
  color String
  size String
  quantity Int
  orderId  Int
  productId Int
  @@id([orderId, color, size, productId])
}

model PaymentMethod {
  id       Int   @id @unique
  name     String
  discount Decimal
  total    Decimal
}